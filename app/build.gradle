buildscript {
    ext.kotlin_version = '1.0.6'
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0-beta2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.22.1'
    }
}

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://dl.bintray.com/jetbrains/anko' }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
def gitCommitCount =
        Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

android {
    signingConfigs {
        release
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "org.seniorsigan.mangareader"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode gitCommitCount
        versionName "${gitCommitCount}"
        archivesBaseName = "mangareader-${versionCode}"
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.release
            zipAlignEnabled true
        }
    }
    productFlavors {
        dev {
            minSdkVersion 23 // To reduce compilation time
        }
        prod {
            minSdkVersion 15
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        warning 'InvalidPackage'
    }
}

ext {
    anko_version = '0.8.2'
    support_version = '25.1.0'
    okhttp_version = '3.2.0'
    picasso_version = '2.5.2'
    photoview_version = '1.2.5'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:design:$support_version"
    compile "com.android.support:support-v4:$support_version"
    compile "com.android.support:cardview-v7:$support_version"
    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.squareup.picasso:picasso:$picasso_version"
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.5.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.anko:anko-sdk15:$anko_version"
    compile "org.jetbrains.anko:anko-support-v4:$anko_version"
    compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'com.google.code.gson:gson:2.7'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}

if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}